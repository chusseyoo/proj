# Folder Descriptions
# domain/: Core business logic and rules (entities, services, value objects, exceptions)
# application/: Orchestrates use cases and workflows (use cases, DTOs, commands/queries)
# infrastructure/: Technical implementation (ORM models, repositories, migrations)
# interfaces/: Adapters for external systems and entry points (API, admin)
# tests/: Automated tests for all layers
# README.md: Overview and documentation for this context

academic_structure/
├── domain/
│   ├── models/
│   │   ├── program.py
│   │   ├── course.py
│   │   ├── stream.py
│   │   └── cohort.py
│   ├── services/
│   │   └── enrollment_rules.py
│   ├── exceptions.py
│   └── value_objects.py
├── application/
│   ├── use_cases/
│   │   ├── create_program.py
│   │   ├── enroll_student.py
│   │   └── assign_stream.py
│   ├── dto/
│   │   └── program_dto.py
│   └── commands_queries.py
├── infrastructure/
│   ├── orm/
│   │   └── django_models.py        # Django model mapping if using separate domain models
│   ├── repositories/
│   │   └── program_repository.py
│   └── migrations/
├── interfaces/
│   ├── api/
│   │   ├── views.py
│   │   ├── serializers.py
│   │   └── urls.py
│   └── admin/
│       └── admin.py
├── tests/
│   ├── domain/
│   ├── application/
│   └── integration/
└── README.md