# Folder Descriptions
# domain/: Core business logic and rules (entities, services, value objects, exceptions, policies)
# application/: Orchestrates use cases and workflows (use cases, DTOs, commands/queries)
# infrastructure/: Technical implementation (ORM models, repositories, adapters, persistence)
# interfaces/: Adapters for external systems and entry points (API, admin, workers)
# tests/: Automated tests for all layers
# README.md: Overview and documentation for this context

attendance_recording/
├── domain/
│   ├── entities/
│   │   └── attendance.py
│   ├── services/
│   │   ├── token_validator.py
│   │   ├── qr_validator.py
│   │   ├── location_validator.py
│   │   └── session_validator.py
│   ├── value_objects/
│   │   └── gps_coordinate.py
│   ├── exceptions.py
│   └── policies/                    # business policies (e.g., duplicate prevention)
├── application/
│   ├── use_cases/
│   │   └── mark_attendance.py       # orchestrator calling domain validators + repo
│   ├── dto/
│   │   └── mark_attendance_dto.py
│   └── commands_queries.py
├── infrastructure/
│   ├── orm/
│   │   └── django_models.py         # Attendance Django model
│   ├── repositories/
│   │   └── attendance_repository.py
│   ├── jwt_adapter/
│   │   └── pyjwt_helper.py
│   └── persistence/                 # DB adapters, migrations
├── interfaces/
│   ├── api/
│   │   ├── handlers/
│   │   │   └── mark_attendance_handler.py
│   │   ├── views.py
│   │   ├── serializers.py
│   │   └── urls.py
│   └── workers/                     # background workers if needed
├── tests/
│   ├── domain/
│   ├── application/
│   ├── infrastructure/
│   └── api/
└── README.md